version: '3.7'

services:
  prometheus:
    image: ${IMAGE_NAME}:${IMAGE_TAG:-latest}
    environment:
      STORAGE_TSDB_RETENTION_TIME:
      STORAGE_TSDB_RETENTION_SIZE:
      STORAGE_TSDB_PATH:
      WEB_ROUTE_PREFIX:
      WEB_EXTERNAL_URL: https://${PUBLIC_HOSTNAME}${PROMETHEUS_PATH}
      PROMETHEUS_PATH:
      JOBS:
    networks:
      monitoring-net:
      traefik-net:
    volumes:
      - prometheus-data-vol:${STORAGE_TSDB_PATH}
    configs:
      - source: scheduled_job_rules
        target: /etc/prometheus/scheduled_job.rules.yml
      - source: swarm_node_rules
        target: /etc/prometheus/swarm_node.rules.yml
      - source: swarm_service_rules
        target: /etc/prometheus/swarm_service.rules.yml
      - source: swarm_task_rules
        target: /etc/prometheus/swarm_task.rules.yml
      - source: arcgis_enterprise_rules
        target: /etc/prometheus/arcgis_enterprise.rules.yml
      - source: windows_server_rules
        target: /etc/prometheus/windows_server.rules.yml
    healthcheck:
      test: wget --spider -q http://localhost:${PORT}/-/healthy
      interval: ${HEALTHCHECK_INTERVAL:-1m}
      timeout: ${HEALTHCHECK_TIMEOUT:-30s}
      retries: ${HEALTHCHECK_RETRIES:-10}
      start_period: ${HEALTHCHECK_START_PERIOD:-3m}
    deploy:
      mode: replicated
      replicas: ${REPLICAS:-1}
      restart_policy:
        delay: ${RESTART_DELAY:-3s}
      update_config:
        delay: ${UPDATE_DELAY:-1m}
      labels:
        traefik.enable: 'true'
        traefik.http.routers.prometheus.entrypoints: http
        traefik.http.routers.prometheus.rule: Host(`${PUBLIC_HOSTNAME}`) && PathPrefix(`${PROMETHEUS_PATH}`)
        traefik.http.services.prometheus.loadbalancer.server.port: '${PORT}'
        traefik.http.middlewares.prometheus-auth.basicauth.users: ${UI_AUTH}
        traefik.http.middlewares.prometheus-stripprefix.stripprefix.prefixes: ${PROMETHEUS_PATH}
        traefik.http.routers.prometheus.middlewares: prometheus-auth,prometheus-stripprefix
        traefik.http.routers.prometheus.service: prometheus

networks:
  monitoring-net:
    name: ${MONITORING_NET_NAME:-monitoring-net}
    driver: ${MONITORING_NET_DRIVER:-overlay}
    attachable: ${MONITORING_NET_ATTACHABLE:-true}

  traefik-net:
    name: ${TRAEFIK_NET_NAME:-traefik-net}
    driver: ${TRAEFIK_NET_DRIVER:-overlay}
    external: true

configs:
  scheduled_job_rules:
    name: ${SCHEDULED_JOB_RULES_NAME:-scheduled_job_rules}
    file: ./rules/scheduled_job.rules.yml

  swarm_node_rules:
    name: ${SWARM_NODE_RULES_NAME:-swarm_node_rules}
    file: ./rules/swarm_node.rules.yml

  swarm_service_rules:
    name: ${SWARM_SERVICE_RULES_NAME:-swam_service_rules}
    file: ./rules/swarm_service.rules.yml

  swarm_task_rules:
    name: ${SWARM_TASK_RULES_NAME:-swam_task_rules}
    file: ./rules/swarm_task.rules.yml

  arcgis_enterprise_rules:
    name: ${ARCGIS_ENTERPRISE_RULES_NAME:-arcgis_enterprise_rules}
    file: ./rules/arcgis_enterprise.rules.yml

  windows_server_rules:
    name: ${WINDOWS_SERVER_RULES_NAME:-windows_server_rules}
    file: ./rules/windows_server.rules.yml

volumes:
  prometheus-data-vol:
    name: ${PROMETHEUS_DATA_VOL_NAME:-prometheus-data-vol}
